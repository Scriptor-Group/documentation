apiVersion: apps/v1
kind: Deployment
metadata:
  name: devana-meilisearch
  namespace: devana-production
  labels:
    app: devana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devana-meilisearch
  template:
    metadata:
      labels:
        app: devana-meilisearch
        tier: devana-meilisearch
    spec:
      containers:
        - name: devana-meilisearch
          image: getmeili/meilisearch:v1.9
          resources:
            limits:
              cpu: "4"
              memory: "3Gi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          ports:
            - containerPort: 7700
          env:
            - name: MEILI_MASTER_KEY
              value: "EXAMPLE_MASTER_KEY"
          volumeMounts:
            - name: meilisearch-volume-staging-mount
              mountPath: /meili_data
      imagePullSecrets:
        - name: registry-secret-scriptor
      volumes:
        - name: meilisearch-volume-staging-mount
          persistentVolumeClaim:
            claimName: meilisearch-pvc-staging
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: meilisearch-pvc-staging
  namespace: devana-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: devana-meilisearch-service
  namespace: devana-production
spec:
  selector:
    app: devana-meilisearch
    tier: devana-meilisearch
  ports:
    - protocol: TCP
      port: 7700
      targetPort: 7700
